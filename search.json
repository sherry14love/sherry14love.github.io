[{"title":"回归与分类","url":"/2024/06/05/learn/data3/","content":"\n回归（Regression）和分类（Classification）是机器学习中两种常见的监督学习任务，它们在目标和方法上有所不同。\n\n## 回归（Regression）\n\n回归分析是一种预测性的建模技术，它研究的是因变量（目标）和自变量（预测器）之间的关系。这种技术通常用于预测一个具体的数值，如房价、股票价格、温度等。\n\n**关键特点：**\n- **目标变量**：连续值。\n- **输出**：一个数值。\n- **例子**：线性回归、多项式回归、决策树回归、随机森林回归等。\n\n**应用场景**：\n- 房价预测\n- 销售预测\n- 股票价格预测\n\n### 线性回归\n线性回归（Linear Regression）是统计学和机器学习中最基础的预测建模技术之一，它用于建立和估计一个变量（因变量）与一个或多个变量（自变量）之间的线性关系。线性回归假设因变量和自变量之间的关系可以用一条直线（在一维情况下）或一个超平面（在多维情况下）来近似表示。\n\n### 基本概念\n**因变量（Dependent Variable）**：我们试图预测的变量，通常表示为 $y$。\n**自变量（Independent Variables）**：用于预测因变量的变量，通常表示为 $x_1, x_2, \\ldots, x_n$。\n**参数（Parameters）**：模型中的系数，用于确定自变量和因变量之间的关系，通常表示为 $\\beta_0, \\beta_1, \\ldots, \\beta_n$。其中 $\\beta_0$ 是截距，$\\beta_1, \\ldots, \\beta_n$ 是各自变量的系数。\n\n### 模型表示\n在一元线性回归（只有一个自变量）中，模型可以表示为：\n$y = \\beta_0 + \\beta_1x + \\epsilon$\n在多元线性回归（有多个自变量）中，模型可以表示为：\n$y = \\beta_0 + \\beta_1x_1 + \\beta_2x_2 + ... + \\beta_nx_n + \\epsilon$\n其中$\\epsilon$ 是误差项，表示模型未能捕捉到的随机变异。\n### 参数估计\n线性回归模型的参数通常使用最小二乘法（Least Squares Method）来估计，目的是找到使所有观测值的残差平方和（RSS，Residual Sum of Squares）最小的参数值。数学上，这可以通过求解最小化问题来实现：\n$$\\min_{\\beta_0, \\beta_1, ..., \\beta_n} \\sum_{i=1}^{N} (y_i - (\\beta_0 + \\beta_1x_{i1} + \\beta_2x_{i2} + ... + \\beta_nx_{in}))^2$$\n\n### 假设\n\n线性回归模型基于几个关键假设：\n1. **线性关系**：因变量和自变量之间的关系是线性的。\n2. **独立性**：观测值之间是相互独立的。\n3. **同方差性**：误差项的方差对于所有观测值都是相同的。\n4. **无自相关**：误差项之间不存在自相关（即序列相关）。\n5. **正态性**：误差项是正态分布的。\n\n### 评估指标\n\n- **均方误差（MSE）**：衡量预测值和实际值之间差异的平均平方值。\n- **决定系数（R-squared）**：表示模型解释的数据变异性的比例。\n\n### 应用\n\n线性回归广泛应用于各种领域，包括经济学、金融学、社会科学、物理学等，用于预测和分析变量之间的关系。\n\n### 注意事项\n\n- 线性回归对异常值敏感。\n- 需要满足模型的假设条件。\n- 在处理非线性关系时，可能需要使用多项式回归或其他非线性模型。\n\n线性回归虽然简单，但它是理解更复杂模型的基础，并且在许多实际问题中仍然非常有效。 \n\n## 分类（Classification）\n\n分类是另一种预测模型，它涉及将数据分到预定义的类别或标签中。分类模型通常用于识别模式，并根据这些模式对数据进行分类。\n\n**关键特点：**\n- **目标变量**：离散值，通常是预定义的类别。\n- **输出**：一个类别或标签。\n- **例子**：逻辑回归、决策树分类、支持向量机（SVM）、随机森林分类、神经网络等。\n\n**应用场景**：\n- 垃圾邮件检测\n- 图像识别\n- 信用评分\n\n## 主要区别\n\n- **目标变量的类型**：回归分析处理连续数值，而分类处理离散的类别。\n- **输出的性质**：回归输出一个数值，分类输出一个类别。\n- **损失函数**：回归通常使用均方误差（MSE）等，分类则使用交叉熵损失等。\n\n### 逻辑回归\n逻辑回归（Logistic Regression）是一种广泛使用的统计学习方法，用于解决分类问题。尽管它的名字中包含“回归”，但实际上它主要用于分类任务，特别是二分类问题。逻辑回归通过使用逻辑函数（也称为Sigmoid函数）来估计概率，从而将线性回归的输出转换为0到1之间的概率值，这个概率值可以用来预测样本属于某一类别的概率。\n\n### 基本概念\n\n- **因变量（Dependent Variable）**：通常是二元的，表示为$y$，取值为0或1。\n- **自变量（Independent Variables）**：用于预测因变量的变量，表示为$x_1, x_2, ..., x_n$。\n- **参数（Parameters）**：模型中的系数，用于确定自变量和因变量之间的关系，表示为$\\beta_0, \\beta_1, ..., \\beta_n$。\n\n### 模型表示\n\n逻辑回归模型可以表示为：\n$$P(y=1|X) = \\frac{1}{1 + e^{-(\\beta_0 + \\beta_1x_1 + \\beta_2x_2 + ... + \\beta_nx_n)}}$$\n其中$P(y=1|X)$是给定自变量$X$时，因变量$y$取值为1的概率。逻辑函数（Sigmoid函数）定义为：\n$$\\sigma(z) = \\frac{1}{1 + e^{-z}}$$\n\n其中$z = \\beta_0 + \\beta_1x_1 + \\beta_2x_2 + ... + \\beta_nx_n$。\n\n### 参数估计\n\n逻辑回归的参数通常使用最大似然估计（Maximum Likelihood Estimation, MLE）来估计。目标是找到最大化观测数据似然函数的参数值。数学上，这可以通过求解优化问题来实现，通常使用梯度下降或其变体（如随机梯度下降、牛顿法等）来找到最优参数。\n\n### 假设\n\n逻辑回归模型基于以下假设：\n1. **线性关系**：自变量和因变量之间的关系可以通过线性组合来近似。\n2. **概率输出**：模型的输出是样本属于正类的概率。\n\n### 评估指标\n\n- **准确率（Accuracy）**：正确预测的比例。\n- **混淆矩阵（Confusion Matrix）**：显示真正例（True Positives）、假正例（False Positives）、真反例（True Negatives）和假反例（False Negatives）的数量。\n- **精确率（Precision）**：真正例占所有预测为正例的比例。\n- **召回率（Recall）**：真正例占所有实际正例的比例。\n- **F1分数（F1 Score）**：精确率和召回率的调和平均。\n\n### 应用\n\n逻辑回归广泛应用于各种领域，包括医学、金融、社会科学等，用于预测和分类任务，如信用评分、疾病诊断、垃圾邮件检测等。\n\n### 注意事项\n\n- 逻辑回归对自变量的缩放和异常值敏感。\n- 它假设数据是线性可分的，这在某些情况下可能不成立。\n- 逻辑回归不直接提供概率的置信区间。\n\n逻辑回归是一种强大且易于实现的分类算法，尤其适合于二分类问题，并且在实际应用中非常受欢迎。\n\n## 小总结\n\n回归和分类是机器学习中的基本任务，它们各自适用于不同类型的问题。选择哪种方法取决于问题的性质和所需解决的具体任务。在实际应用中，这两种方法都有广泛的应用，并且经常需要根据数据的特点和业务需求来选择合适的模型。\n","tags":["数据分析"],"categories":["learn"]},{"title":"GPT食用分享","url":"/2024/06/01/Tool/ChatGPTfree/","content":"## GPT4\n\n人狠话不多，咱直接分享网站：\n\n### `官网`:\n1. *openAI*（GPTS🐮）：https://chat.openai.com/\n\n2. *Claude*（Claude🐮）：https://claude.ai/\n\n3. Copilot（最早联网的🐮）：https://copilot.microsoft.com/\n\n4. *DeepSeek*（写报告不错）：https://chat.deepseek.com/\n\n5. 智谱清言（还可以）：https://chatglm.cn/\n\n6. Kimi（除了上传文档没什么优点）：https://kimi.moonshot.cn/\n\n7. 通义千问（还凑合）：https://tongyi.aliyun.com/qianwen/\n\n8. 讯飞星火（还凑合）：https://xinghuo.xfyun.cn/\n\n9. 文心一言（嗯...3.5一言难尽）：https://yiyan.baidu.com/\n\n### `套壳`:大部分原版套壳的都能用GPTS\n\n1. Poe（每日10次4o）：https://poe.com/\n\n2. *Coze*（免费🐮）：https://www.coze.com/\n\n3. 慧AI（每日150次4o）：https://huiai.io/signup/?code=2926\n\n4. Arena（免费，拥挤）：https://arena.lmsys.org/\n\n5. ChatGate（所有模型可用但不能上传文件）：https://chatgate.ai/\n\n6. ChatData（免费可用所有模型，不稳定）：https://chat.chatdata.online/chat\n\n7. *Aicnn*（联系拉姆）：http://aicnn.cn/loginPage?aff=zypTghoVaW\n\n<!-- *Aicnn*：http://www.aicnn.cn/oaifree -->\n\n8. 套壳1(不推荐）：https://oai.aitopk.com/\n\n9. 套壳2（可用4o）：https://share.bpj666.xyz/\n\n10. 套壳3（可体验4）：https://jvip.ccaiai.com/#/chat/1002\n\n11. 套壳4（免费公共账户-4）：https://share.wendaalpha.net/\n\n12. 套壳5（可用4o）：https://jialeopen.love/chat/#/\n\n13. WRTN（免费4，韩国）：https://wrtn.ai/\n\n14. Dify（免费Claude）：https://cloud.dify.ai/\n\n15. Merlin（每日4o四次）：https://www.getmerlin.in/zh-CN/chat\n\n16. LibreChat（慈善家，免费）：https://get.multibotapp.com/c/new\n\n17. OhMyGpt（不推荐）：https://www.ohmygpt.com/\n\n18. Free For Ai（慈善家）：https://ffa.chat/\n\n19. ChandlerAi（每月四十次）:https://mychandler.bet/\n\n20. 套壳6（50次3小时4o）：https://share.sydney-ai.com/\n\n21. 套壳7（一日五次4o）：https://gpt4o.so/zh-CN/app\n\n22. 套壳8（所有模型免费）：https://chat.sorapi.dev/ \n\n### `导航`:\n\n1. *GPT公益导航*：https://dongfang.flowus.cn/\n\n2. 摸鱼技术网：https://xn--v4q818bf34b.com/\n\n3. Github统计免费GPT导航网页：https://github.com/LiLittleCat/awesome-free-chatgpt?tab=readme-ov-file#-chatgpt-%E9%95%9C%E5%83%8F%E5%88%97%E8%A1%A8\n\n4. 非猪ai导航：https://feizhuke.com/#term-6606\n\n5. 潮点AI导航：https://aichaodian.com/\n\n6. 公益RawChat：https://sharedchat.cn/\n\n","tags":["GPT"],"categories":["Tool"]},{"title":"GPT-4o免费分享","url":"/2024/05/23/Tool/GPT4o/","content":"\n  注意喔，红色字体可以直接转跳。如果想要免费的ChatGPT4，可以和拉姆联系，拉姆很乐意和小伙伴们进行讨论喔~\n\n## 国内可访问的mychandler\n\n  [mychandler](https://mychandler.bet/)每月免费用户有40次，就是进入的时候很慢很慢，使用魔法也不快（他的CDN肯定有问题）\n\n  ![mychandler](https://www.qiuxs.cn/sharing-tools/img/read/ce0e2643bf94e02164fbba6c147cba4b)\n  \n## 插件merlin（国内可用）\n\n  [merlin](https://www.getmerlin.in/zh-CN/chat)可以在edge中访问，也可以在chrome中，每日102电力，下面是详细价格表：\n\n  ![merlin](https://www.qiuxs.cn/sharing-tools/img/read/bb2ff479dba6482d4066b238688fcbc3)\n\n## Coze\n\n  [Coze](https://www.coze.com/)简直是我们的神，每次都是免费的！无论是GPT4还是4o，而且到目前为止，拉姆都不知道他的限制次数或者tokens到底是多少，太伟大了\n\n  ![Coze](https://www.qiuxs.cn/sharing-tools/img/read/10b01ddb99f4d6bdbd76fa8d0e35dbeb)\n\n## YOU\n\n  [YOU](https://you.com/)每日五次访问，使用体验是比较可以的。\n\n  ![YOU](https://www.qiuxs.cn/sharing-tools/img/read/7482489d99d68c7a0aee66978735748d)\n\n## Poe\n\n  拉姆想了想，貌似每次都是这几家可以免费使用，像是[lmsys.org](https://arena.lmsys.org/),[poe](https://poe.com/)等，虽然有所限制，但是对于轻度用户还是比较友好的，OpenAI官网其实这次的4o模型也是免费的，但是，这需要等待。\n\n  >poe如果只用GPT4o可以每日免费10次哦\n\n  ","tags":["GPT"],"categories":["Tool"]},{"title":"随机森林与决策树","url":"/2024/05/20/learn/data2/","content":"\n## 定义与基本概念\n\n* 决策树: 树形结构的分类或回归模型，通过特征分割进行分类\n* 随机森林: 集成学习算法，由多个决策树组成\n\n## 决策树（Decision Tree）\n\n  决策树是一种用于分类和回归问题的基本算法，可以对数据进行分类和预测，主要步骤包括特征选择，决策树生成，剪枝。\n\n  1. 特征选择：决策树通过递归地选择最优特征，并根据该特征对训练数据进行分割，使得对各个子数据集有一个最好的分类。\n\n  2. 决策树生成：决策树从根节点开始，每个节点都是基于某个特征的分割条件，最终形成一棵树形结构。\n\n  3. 剪枝：为了防止过拟合，通常会对生成的树进行剪枝，通过移除预测性能不佳的分支来简化模型。\n\n  ```bash\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score, classification_report\n\n# 加载数据\niris = load_iris()\nX = iris.data\ny = iris.target\n\n# 分割数据集为训练集和测试集\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# 创建决策树分类器\nmodel = DecisionTreeClassifier(random_state=42)\n\n# 训练模型\nmodel.fit(X_train, y_train)\n\n# 使用模型进行预测\ny_pred = model.predict(X_test)\n\n# 计算准确率\naccuracy = accuracy_score(y_test, y_pred)\nprint(f\"准确率: {accuracy * 100}%\")\n\n# 打印分类报告\nprint(\"分类报告:\")\nprint(classification_report(y_test, y_pred))\n  ```\n## 随机森林（Random Forest）\n\n  随机森林是一种基于决策树的集成学习算法，由多个决策树构成。其核心思想是“集体智慧”，即多个决策树的平均预测结果通常比单个模型更准确。\n\n  随机森林是一种基于 Bagging 策略的集成学习模型，它能够有效地处理非线性问题，并且擅长处理大量样本和特征。此外，随机森林还注重降低方差。Bagging 方法在训练过程中，各基学习器之间无依赖，可实现并行训练。通过集成多个模型，它可以有效地处理过拟合问题，提高模型的预测准确性和泛化能力。随机森林可用于分类、回归和异常检测任务。\n\n```bash\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\n\n# 加载数据\niris = load_iris()\nX = iris.data # 特征数据\ny = iris.target # 目标标签\n\n# 分割数据集为训练集和测试集\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# 创建随机森林模型\nmodel = RandomForestClassifier(n_estimators=100, random_state=42)\n\n# 训练模型\nmodel.fit(X_train, y_train)\n\n# 获取特征重要性\nimportances = model.feature_importances_\n\n# 打印特征重要性\nfor feature_name, importance in zip(iris.feature_names, importances):\n    print(f\"{feature_name}: {importance}\")\n\n# 使用模型进行预测\npredictions = model.predict(X_test)\n\n# 打印预测结果\nprint(\"预测结果:\", predictions)\n\n# 打印真实结果\nprint(\"真实结果:\", y_test)\n\n# 计算准确率\naccuracy = model.score(X_test, y_test)\nprint(f\"准确率: {accuracy * 100}%\")\n```\n## Bootstrap Sampling\n\n  Bagging（Bootstrap Aggregating）是一种集成学习方法，用于提高机器学习算法的稳定性和准确性。Bagging的核心思想是通过构建多个模型，然后将这些模型的预测结果进行组合，以达到比单个模型更好的预测效果。（这就是随机森林的思想，对不对）\n\n  Bagging的步骤通常为：\n\n  1. 自助采样（Bootstrap Sampling）：从原始数据集中随机抽取多个样本，每个样本的大小与原始数据集相同，但允许重复抽取。这意味着每次抽样都会有一些数据点被多次选中，而另一些则可能不被选中。\n\n  2. 训练模型：使用每个自助采样得到的数据集来训练一个单独的模型。这些模型可以是相同的算法，也可以是不同的算法。\n\n  3. 预测：对新的数据点进行预测时，每个模型都会给出自己的预测结果。\n\n  4. 组合预测：将所有模型的预测结果进行组合。对于分类问题，通常采用投票的方式来决定最终的分类结果；对于回归问题，则通常取所有模型预测结果的平均值作为最终的预测值。\n  \n  Bagging的主要优点是能够减少模型的方差，提高模型的泛化能力。它特别适用于那些高方差的模型（如决策树）\n\n  所以比较著名的一个Bagging算法就是随机森林。\n\n  ## 决策树与随机森林的区别\n\n  随机森林（Random Forest）和决策树（Decision Tree）都是流行的机器学习算法，它们在数据分析和预测建模中广泛使用。尽管它们都基于决策树的概念，但它们在结构和应用上有所不同。下面我们来看看随机森林和决策树之间的一些主要区别：\n\n1. **模型结构**：\n   - **决策树**：是一个单一的树结构，它通过一系列的决策节点（内部节点）和终端节点（叶子节点）来对数据进行分类或回归。\n   - **随机森林**：是一个集成学习方法，它由多个决策树组成。随机森林通过构建多个树并将它们的预测结果进行组合来提高模型的性能。\n2. **预测方式**：\n   - **决策树**：对新数据进行预测时，从根节点开始，根据特征值沿着树的路径向下移动，直到到达叶子节点，该节点的值即为预测结果。\n   - **随机森林**：对新数据进行预测时，每个决策树都会给出自己的预测结果，然后通过投票（分类问题）或平均（回归问题）的方式来确定最终的预测结果。\n3. **过拟合问题**：\n   - **决策树**：容易过拟合，特别是在树很深的情况下，因为它可以完美地拟合训练数据。\n   - **随机森林**：通过集成多个树，随机森林能够减少过拟合的风险，因为即使单个树可能过拟合，但多个树的组合通常会更加稳定。\n4. **特征选择**：\n   - **决策树**：在每个节点上，决策树会考虑所有可用的特征来选择最佳的分割方式。\n   - **随机森林**：在构建每棵树时，随机森林会在每个节点上随机选择一部分特征来考虑最佳的分割方式，这增加了模型的多样性。\n5. **训练时间**：\n   - **决策树**：通常训练时间较短，因为只需要训练一个模型。\n   - **随机森林**：训练时间较长，因为需要训练多个决策树。\n6. **特征重要性**：\n   - **决策树**：可以提供特征重要性的度量，但通常不如随机森林准确。\n   - **随机森林**：能够提供更准确的特征重要性度量，因为它基于多个树的平均结果。\n\n  总的来说，随机森林通过集成多个决策树来提高模型的准确性和鲁棒性，而决策树则是一个更简单、更快速的单模型方法。随机森林通常在处理复杂数据集时表现更好，而决策树则适用于快速原型设计和简单数据集。\n","tags":["数据分析"],"categories":["learn"]},{"title":"数据分析与数据挖掘浅谈","url":"/2024/05/19/learn/data1/","content":"## 技术栈和工具分析\n\n  对于python技术栈的我们来说，走数据分析与数据挖掘是一条不错的路。\n\n  虽然也可以走前后端，但是目前的市场份额，Java和PHP仍然是主流，对于大厂而言，正在从Java到Golang过渡，所以python做前后端是有点尴尬的。\n\n  数据分析与数据挖掘常见的技术栈除了python之外，还有R、SQL、Hadoop、Spark、Hive、SPSS、SAS、Weka、Scikit-learn、TensorFlow、Keras等。\n\n  其中拉姆目前所接触的只有python、r、spss、Scikit-learn、TensorFlow、Keras\n\n  比较熟悉的只有python的一些库，Pandas、NumPy就不用说了，Scikit-learn、TensorFlow、Keras则是在机器学习和深度学习里的一点东西（其实也是python的库），大学里开设了相关的专业课与实验课。\n\n  R语言则是最近学习了解的。\n\n  SPSS、SAS、Weka是经典的数据挖掘和统计分析工具，使用起来并不是说很困难，可以尝试进行学习。\n\n  其实除了上面的之外，还有[spsspro](https://www.spsspro.com/)、[FineBI](https://www.finebi.com/)等，都是要比那种纯粹的工具更好用的。\n\n## 数据分析与数据挖掘的联系\n\n  数据分析主要是指使用统计学、数学和计算机科学的方法来处理和分析数据，以提取有用的信息和洞察，帮助做出决策。\n\n  数据分析可以包括描述性分析（如计算平均值、中位数、标准差等）、诊断性分析（分析数据变化的原因）、预测性分析（使用历史数据预测未来趋势）和规范性分析（基于预测结果提出行动建议）。\n\n  数据分析通常侧重于已知模式的识别和验证，以及对数据的解释和报告。\n\n  数据挖掘则是一种更深层次的数据分析方法，它侧重于从大量数据中发现未知的、潜在有用的模式和关系。\n\n  数据挖掘通常涉及复杂的算法和技术，如聚类分析、关联规则学习、分类、回归和异常检测等。\n\n  数据挖掘的目的是发现数据中的隐藏模式，这些模式可能对业务决策、市场分析、风险管理等领域有重要价值。\n\n  两者都需要对数据进行预处理，比如清理缺失值、检查异常值、去除噪声什么的。\n\n## 食用指南1\n  \n  1.因为版本等各种因故，导致一些代码在运行的时候会有各种各样的警告，我们可以使用下面的代码进行**忽略警告**：\n  ```bash\n    import warnings\n    warnings.filterwarnings('ignore')\n  ```\n  2.绘图的时候因为字体因故加载不出来中文字体，可以用下面代码：\n  ```bash\n    import matplotlib.pyplot as plt\n    # 设置中文字体\n    plt.rcParams['font.sans-serif'] = 'SimHei'\n    plt.rcParams['axes.unicode_minus'] = False\n  ```\n  3.读取数据：\n  ```bash\n    import pandas as pd #数据导入 \n    data = pd.read_csv('data.csv')\n  ```\n  4.数据探索：\n  ```bash\n    print(data.head()) # 查看数据前几行\n    print(data.describe())# 查看数据统计摘要\n    print(data.columns)# 查看数据列名\n  ```\n  5.数据处理的时候难免会遇到缺失值，这个时候我们可以进行之间删除，或者用均值进行填充：\n  ```bash\n    # 处理缺失值\n    data = data.dropna()  # 删除含有缺失值的行\n    # 或者\n    data = data.fillna(data.mean())  # 用特定值（这里是均值）填充缺失值\n  ```\n  6.在数据分析之中，绘图matplotlib是最为常见的一个库，可以绘画各种图像进行数据可视化帮助我们理解：\n  ```bash\n    import matplotlib.pyplot as plt\n    data['column_name'].hist()  \n    plt.show() # 绘制直方图   \n    plt.scatter(data['column_name1'], data['column_name2'])\n    plt.show()# 绘制散点图\n  ```\n  7.我们在处理一些数据的时候需要进行**标准化**，为什么呢，因为可以帮助不同的特征具有相似的尺度，提高模型的收敛速度，使特征更符合标准的正态分布，提高模型的准确性和可解释性：\n  ```bash\n    from sklearn.preprocessing import StandardScaler\n    scaler = StandardScaler()  \n    scaled_data = scaler.fit_transform(data)# 数据标准化\n    # 将标准化后的数据转换为DataFrame\n    scaled_data = pd.DataFrame(scaled_data, columns=data.columns)\n  ```\n  8.进行**特征选择**在数据挖掘和机器学习中是非常必要的，它有助于去除无关或冗余的特征，提升模型性能，并减少计算成本，而且过多的特征可能导致维度灾难，增加模型复杂度，引发过拟合，并增加时间成本：\n  ```bash\n    from sklearn.feature_selection import SelectKBest\n    from sklearn.feature_selection import chi2\n    # 使用卡方检验选择特征选择排名前 10 的特征\n    selector = SelectKBest(score_func=chi2, k=10)\n    selected_features = selector.fit_transform(data, target)\n  ```\n  9.**建模**更不用说了，是数据挖掘之中必不可少的组成部分：\n  ```bash\n    from sklearn.linear_model import LinearRegression\n    # 线性回归模型\n    model = LinearRegression()\n    model.fit(X_train, y_train)\n    predictions = model.predict(X_test)\n  ```\n  10.建模之后，还需要对模型进行**评估**，这样可以帮助我们优化模型参数，提高模型性能，选择最佳模型等：\n  ```bash\n    from sklearn.metrics import mean_squared_error\n    # 计算均方误差\n    mse = mean_squared_error(y_test, predictions)\n    print(\"MSE:\", mse))\n  ```\n  11.**聚类分析**是一种无监督学习方法，通过聚类，我们可以发现数据中相似的群组或簇，更好地理解数据之间的关系，还可以检测出异常值、噪声、离群点等：\n  ```bash\n    from sklearn.cluster import KMeans\n    # KMeans聚类\n    kmeans = KMeans(n_clusters=3)\n    kmeans.fit(data)\n    labels = kmeans.labels_\n  ```\n  12.分类任务常见的有**随机森林**、**决策树**、**逻辑回归**、**朴素贝叶斯**、**支持向量机**等，我们来简单介绍一下最常见的**SVM**，SVM适用于线性和非线性分类问题，还可以高效处理高维数据集，在多类别分类时具有独特的优势：\n  ```bash\n    from sklearn.svm import SVC\n    # 支持向量机分类\n    svm = SVC()\n    svm.fit(X_train, y_train)\n    predictions = svm.predict(X_test)\n  ```\n  这篇博文先写这些，后面有机会再拓展聊一下，下次见~","tags":["数据分析"],"categories":["learn"]},{"title":"docker食用指南","url":"/2024/05/18/learn/docker/","content":"\n## 什么是Docker？\nDocker 是一个开源的应用容器引擎，让开发者可以打包他们的应用及其依赖包到一个可移植的容器中，然后发布到任何支持 Docker 的平台上。它提供了简便的虚拟化解决方案，使得应用开发、测试和部署更加一致和高效。\n\n## Docker的应用场景\n- Web 应用的自动化打包和发布。\n- 自动化测试和持续集成、发布。\n- 在服务型环境中部署和调整数据库或其他的后台应用。\n- 从头编译或者扩展现有的 OpenShift 或 Cloud Foundry 平台来搭建自己的 PaaS 环境。\n## 基本概念\n- 镜像 (Image)：镜像是一个只读模板，包含了运行应用程序所需的所有内容（代码、库、配置等）。可以把镜像看作是一个蓝图，用于创建Docker容器。\n- 容器 (Container)：容器是镜像的运行实例，它是一个轻量级、独立的可执行软件包，包含了软件运行所需的所有内容。\n- Dockerfile：Dockerfile是一个文本文件，包含了一系列指令，告诉Docker如何构建镜像。\n- Docker Hub：这是一个云端的公共仓库，你可以在上面找到和共享Docker镜像\n\n## 安装 Docker\n### 1. Linux\n在Linux上，可以使用官方脚本来安装Docker。例如，在Ubuntu上：\n```bash\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\n```\n### 2. Windows 和 macOS\n下载并安装Docker Desktop：\n- [Docker Desktop for Windows](https://www.docker.com/products/docker-desktop)\n- [Docker Desktop for macOS](https://www.docker.com/products/docker-desktop)\n\n## 基本命令\n### 下载镜像\n使用 `docker pull` 命令从 Docker Hub 下载镜像：\n```bash\ndocker pull <image_name>\n```\n### 创建并启动容器\n使用 `docker run` 命令创建并启动一个容器。例如，运行一个交互式的 Ubuntu 容器：\n```bash\ndocker run -it ubuntu bash\n```\n- `-it`：以交互模式运行，并分配一个伪 TTY。\n- `ubuntu`：指定使用的镜像。\n- `bash`：在容器内运行的命令。\n### 进入容器\n使用 `docker exec` 命令进入正在运行的容器：\n```bash\ndocker exec -it <container_id> bash\n```\n### 查看容器状态\n- 查看所有运行中的容器：\n  ```bash\n  docker ps\n  ```\n- 查看所有容器，包括已停止的：\n  ```bash\n  docker ps -a\n  ```\n### 停止容器\n使用 `docker stop` 命令停止一个运行中的容器：\n```bash\ndocker stop CONTAINER_ID\n```\n### 删除容器\n使用 `docker rm` 命令删除一个已停止的容器：\n```bash\ndocker rm CONTAINER_ID\n```\n### 导出和导入容器\n- 导出容器：\n  ```bash\n  docker export <container_id> > output.tar\n  ```\n- 导入容器：\n  ```bash\n  docker import output.tar <new_container_name>\n  ```\n### 构建镜像\n使用 `docker build` 命令从当前目录中的 Dockerfile 构建一个镜像：\n```bash\ndocker build -t TAG_NAME .\n```\n- `-t TAG_NAME`：为镜像指定一个标签。\n- `.`：指定 Dockerfile 所在的目录。\n\n通过这些命令，我们可以有效地管理和操作Docker容器和镜像，实现应用的快速部署和环境的统一管理。\n\n## Dockerfile 示例\nDockerfile 是用于构建Docker镜像的文本文件，包含一系列指令。例如，以下是一个简单的Dockerfile：\n```dockerfile\n# 使用官方的Python基础镜像\nFROM python:3.9-slim\n\n# 设置工作目录\nWORKDIR /app\n\n# 复制当前目录内容到工作目录\nCOPY . /app\n\n# 安装依赖包\nRUN pip install --no-cache-dir -r requirements.txt\n\n# 定义环境变量\nENV NAME World\n\n# 设置容器启动时运行的命令\nCMD [\"python\", \"app.py\"]\n```\n\n## 镜像管理\n### 1. 列出镜像\n列出本地所有镜像：\n```bash\ndocker images\n```\n### 2. 拉取镜像\n从Docker Hub拉取一个镜像：\n```bash\ndocker pull IMAGE_NAME\n```\n### 3. 删除镜像\n删除一个本地镜像：\n```bash\ndocker rmi IMAGE_ID\n```\n\n## 网络和数据卷\n### 网络\nDocker允许创建自定义网络，容器可以加入这些网络并相互通信。例如，创建一个网络：\n```bash\ndocker network create my-network\n```\n运行容器时加入网络：\n```bash\ndocker run -d --network=my-network --name my-container ubuntu\n```\n### 数据卷\n数据卷用于持久化数据，可以在容器之间共享和重用。例如，创建一个数据卷：\n```bash\ndocker volume create my-volume\n```\n运行容器时挂载数据卷：\n```bash\ndocker run -d -v my-volume:/app/data ubuntu\n```\n\n## 最佳实践\n1. **使用`.dockerignore`文件**：排除不需要的文件和目录，以减小镜像大小。\n2. **使用官方镜像**：尽量使用官方基础镜像，保证安全性和稳定性。\n3. **保持镜像小巧**：避免包含不必要的依赖，减小镜像大小。\n4. **使用多阶段构建**：通过多阶段构建来减少最终镜像的大小，优化构建过程。\n\n\nDocker 是一个功能强大的工具，上述指南仅涵盖了基础知识。深入学习 Docker 可以帮助你更好地理解容器化技术，并有效地管理应用部署。\n\n>注意在windows系统退出dockers的时候，可能会出现一种情况，后台的WSL没有退出并且占用大量内存，这个时候我们需要 `wsl --shutdown` 命令进行关闭","tags":["docker"],"categories":["learn"]},{"title":"linux食用指南","url":"/2024/05/15/learn/linuxone/","content":"\n## Linux 基本概念\n\n### 1. 什么是Linux\nLinux是一个开源的、类Unix操作系统，由Linus Torvalds于1991年首次发布。它有许多不同的发行版（例如Ubuntu、Red Hat、Fedora、Debian等），用于桌面、服务器和嵌入式系统。\n\n### 2. 文件系统结构\nLinux使用一种树状的文件系统结构，所有内容都从根目录（`/`）开始。常见的目录有：\n- `/bin`：基本命令二进制文件\n- `/etc`：配置文件\n- `/home`：用户主目录\n- `/var`：可变文件，如日志\n- `/usr`：用户程序和数据\n\n### 3. 权限和所有权\n每个文件和目录都有权限和所有权。权限分为三类：所有者、所属组和其他用户。每类权限分为读（r）、写（w）和执行（x）。\n\n### 4. 包管理\nUbuntu使用APT（Advanced Package Tool）来管理软件包。\n\n## 基本命令\n\n### 1. 显示当前路径\n```bash\npwd\n```\n显示当前工作目录的路径。\n\n### 2. 列出目录内容\n```bash\nls\n```\n常用选项：\n- `ls -l`：详细列表格式\n- `ls -a`：包括隐藏文件\n\n### 3. 更改目录\n```bash\ncd /path/to/directory\n```\n进入指定目录。\n\n### 4. 创建目录\n```bash\nmkdir new_directory\n```\n\n### 5. 删除文件或目录\n```bash\nrm file_name\nrm -r directory_name\n```\n`-r` 递归删除目录及其内容。\n\n### 6. 复制文件或目录\n```bash\ncp source_file target_file\ncp -r source_directory target_directory\n```\n\n### 7. 移动文件或重命名\n```bash\nmv old_name new_name\nmv file_name /path/to/new_directory\n```\n\n### 8. 查看文件内容\n```bash\ncat file_name\nless file_name\n```\n`less` 分页查看长文件。\n\n### 9. 编辑文件\n```bash\nnano file_name\nvim file_name\n```\n\n### 10. 查找文件\n```bash\nfind /path/to/search -name \"file_name\"\n```\n\n### 11. 搜索文件内容\n```bash\ngrep \"search_term\" file_name\n```\n\n## 用户管理\n\n### 1. 添加用户\n```bash\nsudo adduser new_user\n```\n\n### 2. 删除用户\n```bash\nsudo deluser user_name\n```\n\n### 3. 修改用户密码\n```bash\nsudo passwd user_name\n```\n\n### 4. 切换用户\n```bash\nsu - user_name\n```\n\n### 5. 查看当前用户\n```bash\nwhoami\n```\n\n## 软件管理\n\n### 1. 更新软件包列表\n```bash\nsudo apt update\n```\n\n### 2. 升级已安装的软件包\n```bash\nsudo apt upgrade\n```\n\n### 3. 安装新软件包\n```bash\nsudo apt install package_name\n```\n\n### 4. 删除软件包\n```bash\nsudo apt remove package_name\n```\n\n### 5. 清理不再需要的软件包\n```bash\nsudo apt autoremove\n```\n\n## 网络配置\n\n### 1. 查看网络接口信息\n```bash\nip addr\n```\n\n### 2. 查看网络连接状态\n```bash\nnetstat -tuln\n```\n\n### 3. 配置静态IP地址\n编辑 `/etc/netplan/*.yaml` 文件：\n```yaml\nnetwork:\n  version: 2\n  ethernets:\n    eth0:\n      addresses:\n        - 192.168.1.100/24\n      gateway4: 192.168.1.1\n      nameservers:\n        addresses: [8.8.8.8, 8.8.4.4]\n```\n然后应用配置：\n```bash\nsudo netplan apply\n```\n\n## 系统管理\n\n### 1. 查看系统信息\n```bash\nuname -a\n```\n\n### 2. 查看磁盘使用情况\n```bash\ndf -h\n```\n\n### 3. 查看内存使用情况\n```bash\nfree -h\n```\n\n### 4. 查看系统日志\n```bash\nsudo journalctl -xe\n```\n\n### 5. 管理服务\n- 启动服务：\n  ```bash\n  sudo systemctl start service_name\n  ```\n- 停止服务：\n  ```bash\n  sudo systemctl stop service_name\n  ```\n- 重启服务：\n  ```bash\n  sudo systemctl restart service_name\n  ```\n- 查看服务状态：\n  ```bash\n  sudo systemctl status service_name\n  ```\n\n## 进阶操作\n\n### 1. 使用SSH连接远程服务器\n```bash\nssh user@remote_server\n```\n通过SSH安全地连接远程服务器。\n\n### 2. 设置防火墙\n```bash\nsudo ufw enable\nsudo ufw allow ssh\nsudo ufw allow 80/tcp\nsudo ufw status\n```\n`ufw`（Uncomplicated Firewall）是一个简化的防火墙管理工具。\n\n### 3. 配置自动更新\n编辑 `/etc/apt/apt.conf.d/50unattended-upgrades` 文件，启用自动更新。\n\n### 4. 设置定时任务（Cron Jobs）\n编辑用户的crontab：\n```bash\ncrontab -e\n```\n添加定时任务。例如，每天凌晨2点备份：\n```bash\n0 2 * * * /path/to/backup_script.sh\n```\n\n### 5. 安装和使用Docker\n安装Docker：\n```bash\nsudo apt update\nsudo apt install docker.io\n```\n启动Docker服务：\n```bash\nsudo systemctl start docker\nsudo systemctl enable docker\n```\n运行一个Docker容器：\n```bash\nsudo docker run hello-world\n```\n\n### 6. 使用Git进行版本控制\n安装Git：\n```bash\nsudo apt install git\n```\n配置Git：\n```bash\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your_email@example.com\"\n```\n克隆一个Git仓库：\n```bash\ngit clone https://github.com/example/repo.git\n```\n\n以上内容涵盖了从基本概念到常用命令和进阶操作，希望能帮助初学者全面了解和使用Ubuntu Linux操作系统。","tags":["linux"],"categories":["learn"]},{"title":"GPT4与实用AI分享","url":"/2024/03/31/Tool/shareGPT/","content":"\n  >这篇博文里有免费的GPT4、音乐生成AI、AI搜索引擎，分为国内和国外两部分。\n\n  其中国内有两个：搜索引擎AI：[秘塔AI](https://metaso.cn/)；Claude平替：[KimiAI](https://kimi.moonshot.cn/)。\n  国外有七个：音乐生成AI：[Suno](https://app.suno.ai/)；GPT4的免费平替：[Coze](https://www.coze.com/)和[Claude](https://claude.ai/chats)还有[wrtn](https://wrtn.ai/)、[PopAi](https://www.popai.pro)；搜索引擎AI：[phind](https://www.phind.com/agent?home=true)和[perplexity](https://www.perplexity.ai/)。\n\n  至于[Copilot](https://copilot.microsoft.com/?culture=en-us&country=us)和[arena.lmsys.org](https://arena.lmsys.org/)就没提，不过你若是想要试试的话，可以直接点击红色字体进行跳转。\n  \n  >PS：**红色字体**是转跳链接哦，点击直接转跳到官网。\n\n## 国内AI\n### 秘塔AI\n1. 秘塔AI https://metaso.cn/\n\n  秘塔AI是一个AI搜索引擎，用户体验是很可以的，国产的可以做到这个水平说实话已经超出我的预料了，虽然国外的AI搜索引擎出来已经将近一年了，不过，在某些方面，拉姆还是支持国产的。\n\n  首先你需要进入官网，点击[秘塔AI](https://metaso.cn/)，进入页面就可以直接使用了。\n\n  这里面有学术模式（对写论文搞学术的很友好）\n\n  ![秘塔AI-0.png](https://www.qiuxs.cn/sharing-tools/img/read/ff6eed44cb8c5c23e6126f0582a48847)\n\n  还有一些如大纲、演示文稿一类的，使用起来很方便。\n\n  ![秘塔AI-1.png](https://www.qiuxs.cn/sharing-tools/img/read/3d653de7f589727eadcc0792240977dc)\n\n### KimiAI\n2. [KimiAI](https://kimi.moonshot.cn/)\n  KimiAI支持最多五十个文档的上传与分析，这点和claude3差不多，在某些方面上是对标GPT4的，在国内免费使用是很良心的。\n\n  点击[KimiAI](https://kimi.moonshot.cn/)可以进入注册使用。\n\n## 国外AI\n### Suno\n3. [Suno](https://app.suno.ai/)\n\n  Suno是一个生成音乐的AI，无论是你给他自己所作歌词还是给他一段描述，他都可以生成一首歌曲，支持各种语言，包括中文，还可以自定义曲风等，开会员还可以生成纯音乐一类的。\n\n  点击[Suno](https://app.suno.ai/)可以注册使用。\n\n  ![coze-0.png](https://www.qiuxs.cn/sharing-tools/img/read/81af18289f07204ce4e73ee88dfcb96f)\n  \n  ![coze-1.png](https://www.qiuxs.cn/sharing-tools/img/read/002da6e091f5014cef0feca58e152560)\n  \n### Coze  \n4. [Coze](https://www.coze.com/)\n\n  其实拉姆的一篇博文[GPT-4(8k)免费使用方法](https://6677677.xyz/2023/12/22/Tool/GPT4.0/)已经介绍过这个免费使用GPT4.0的方法了，而且24年年初还增加了超多插件和GPT4-128K模式，还有一些Skills、Memory、Advanced，总之是非常非常超级良心的。\n\n  点击[Coze](https://www.coze.com/)可以注册使用。\n\n  ![coze-0.png](https://www.qiuxs.cn/sharing-tools/img/read/d2d745b691da5b38f89b16b5bfe7675b)\n  \n  这里面的Persona和Prompt，也就是自定义角色和提示词，是很有意思的，拉姆的一个朋友把这个定义成他女朋友的名字和性格，然后发给他女朋友，还有定义猫娘什么的，这里等待你的开发哦😉\n### Claude\n5. [Claude](https://claude.ai/chats)\n\n  Claude AI尤其是Claude3已经是对标GPT4甚至碾压GPT4的存在，很好用，但是对于小白来说不推荐。\n\n  不是使用上不推荐，是因为现在注册账户目前是需要海外手机号接受验证码的，这个可以在SMS上购买，不过不划算，毕竟SMS一次至少充值2美金...坑人。\n\n  拉姆当时注册的时候，还不需要手机验证码，比较那时候Claude刚出来。\n\n  点击[Claude](https://claude.ai/chats)可以进行注册。\n### wrtn\n6. [wrtn](https://wrtn.ai/)\n\n  这是韩国的一个免费的公益性AI，内含GPT4等各种模型，而且无限制使用，但是这个底层逻辑好像都是用韩文进行的回答，不过你也可以欺骗他，让他用英语或者中文进行回答：\n\n  点击[wrtn](https://wrtn.ai/)可以进行注册。\n\n  ![wrtn-0.png](https://www.qiuxs.cn/sharing-tools/img/read/93edcb34931d01641cdb42af84342381)\n### PopAi\n7. [PopAi](https://www.popai.pro)\n  \n  PopAi可以和文档聊天，也可以做PPT，还有绘图，内置的大模型可以每天使用两次GPT4，对于免费用户而言，虽然有些鸡肋，浅浅得玩一下还是可以的。\n\n  点击[PopAi](https://www.popai.pro)可以进行注册。\n\n  ![Popai-0.png](https://www.qiuxs.cn/sharing-tools/img/read/c4107e9b00ed91e64a3c32f7a637c730)\n### phind\n8. [phind](https://www.phind.com/agent?home=true)\n\n  phind是一个AI搜索引擎，免费用户支持Chat和Search两者模式，Pro支持Code模式。\n\n  点击[phind](https://www.phind.com/agent?home=true)可以进行注册。\n  \n  ![phind-0.png](https://www.qiuxs.cn/sharing-tools/img/read/6b95d3ae7341ac3857fd1e73b7bdb673)\n\n  ![phind-1.png](https://www.qiuxs.cn/sharing-tools/img/read/dc1b8babc874448ed6700c47d6b613fa)\n### perplexity\n9. [perplexity](https://www.perplexity.ai/)\n\n  perplexity也是一个AI搜索引擎，免费用户可以开启pro搜索，一天免费五次，每四个小时恢复一次，基本上就是加强版的new bing，当然不开Pro搜索他所给的答案个人感觉也是可以的。\n\n  点击[perplexity](https://www.perplexity.ai/)可以进行注册。\n  \n  ![perplexity.png](https://www.qiuxs.cn/sharing-tools/img/read/412236785a617acd1bfc25009e177be8)\n","tags":["GPT"],"categories":["Tool"]},{"title":"Summary for 2021-2023","url":"/2024/03/30/diary/university/","content":"\n## 如果能重来\n\n  一眨眼就到大三下学期了，想想似乎是昨天才刚步入大学校园，急景流年，韶光如箭啊。\n\n  目前来看，大学生活虽谈不上颓废，也可以说得上是无所事事，说说比较后悔的几件事吧。\n\n  平心而论，比较**后悔的第一件事**，就是拉姆应该从大一便开始，积极参加各种竞赛项目的，不然也不至于现在连拿得出手的国奖都没几个。\n\n  >这点可以参考拉姆的班委，拿了二三十个竞赛奖项，还有一个大佬，拉姆只是见到过，大三上学期就拿到了几十个奖项，还有各种合作项目，真的真的太强了。\n\n  当然，说笑一下，90%以上的大学生都不知道也不会参与各种竞赛，有这种觉悟的人是很少的，毕竟一般来说你的辅导员催你搞创新学分都在大三大四。\n\n  前些时候在群里看到一个HR说，现在的小孩，**大一大二**就开始**卷实习**，大三秋招，然后月入过万起步，害，要不然每个人的认知水平是不同的，你看看人家，再看看拉姆，不能比不能比。\n\n  **其二**比较后悔的事情便是Java学得不怎么样，不过这点还好，目前已经决定不走后端，前端也不走，其实早知如此就应该报名**数据科学专业**的，刚好也和现如今的offer相匹配，再不然学学软件测试一类的也还好（毕竟在招聘会上看到招软件测试的比较多）\n\n  就是不知道以后ChatGPT这一类的AI对目前行业的影响了，毕竟前些时候世界上第一位完全自主运行的人工智能软件工程师**Devin**已经面世了（当然很多人对Devin提出的质疑咱暂且不提）。\n\n  **其三**嘛，这个博客应该大一就开始做的，无论是记录生活还是写写诗词，亦或者分享学习技术，都是可以的，大三做博客就有点晚了。\n\n  **其四**，虚度光阴，这点深有体会啊，拉姆平常就喜欢看看小说，但是一看便愈发不可收拾，说实在，看小说不如提高一下英语水平，说不准以后还能进个外企，但是现实嘛，不提也罢。\n\n  **其五**，拉姆在网上查了查，写到其四的时候就没有想到其他的，查到一个，认真说起来，拉姆不清楚算不算得遗憾，这更多的可能只是一种选择，那就是看见网上有好多人在说后悔没有体验一下校园恋爱，这点，拉姆不清楚，毕竟身处局中，非旁观者迷。\n\n  不过前些时候拉姆的老大**SXH**，在qq上跟拉姆发癫，一直说他好想谈恋爱（划掉）\n\n  >所以有想恋爱的童鞋，可以和拉姆联系哦，拉姆的老大可是**学历985**，身高**180**，五官端正立体，皮肤细腻如玉，平时动不动就脸红的单纯大男孩。\n  \n<!--   如果能重来，拉姆肯定大一就开始打竞赛。\n\n  说真的，你想想，大一就开始打各种竞赛，你到大三肯定得二三十个证书了（详细请参考拉姆的班委）\n\n  拉姆目前能拿出的竞赛证书证明只有六七八个，都是23年打下来的，但感觉竞赛知名度不怎么高，而且国奖只有三个，实际帮助可能并不大，现在再打的话就已经没那个精力了。\n\n  前些时候看到一个HR在群里说，现在大一大二的小孩好多都在卷实习，大三直接秋招，这简直...太厉害了，果然每个人的认知都是不同的。拉姆大一时候，似乎还在看小说，虽然现在也在看就是了。\n\n  你现在如果是在大一或者大二，真的可以考虑一下是否卷卷实习，打打竞赛，这样你会学到很多，而且到时候你的简历也很好看。\n\n  拉姆这个专业，到后面走人工智能是不可能的，走算法也不大可能，毕竟算法方面除非你大一大二就开始搞算法，不然你真的看不懂，算法实在是太抽象了（也可能拉姆比较笨）\n\n  刚刚和朋友聊了聊，他说算法岗不好走，对口专业的工作更不好走，他考研不走人工智能，走计科。其实也挺好，毕竟研究生现在那些搞AI的原先都是搞大数据和算法的，只不过这两年AI火起来了，只不过，拉姆这个学校的考研率只有10-15%嗯...上一年好像只有一个学生考到了985，其他的绝大部分都是双非，211也不多。\n\n  害其实最终目的都是为了就业，但是目前真的不如十年前甚至五年前，太饱和了，现在哪里像以前啊。 -->\n\n## 回归过去\n\n  其实过去也没那么的烂，写过的诗词挺多（划掉）\n\n  最起码还是参加过一些竞赛的，在简历上有项目经历和荣誉奖项可写。\n\n  还有认识了好多好多朋友（在大学貌似异性缘和同性缘都挺不错的，这点很开心）\n\n## 展望一下24年的未来\n\n  目前最要紧的事情是做算法题，毕竟蓝桥杯04-13要开始了，再不做就来不及了，还有就是学习实习那边要求的各种课程视频，毕竟实习什么都不会的话，就很说不过去。\n  \n  期待未来越来越好，拉姆，嗯！要越来越幸运！\n\n  下一篇博客应该是关于AI工具的分享，毕竟今天弄了一天了（好）","tags":["日记"],"categories":["dairy"]},{"title":"2023下半年之奇怪的散文总结","url":"/2024/01/08/diary/2023/","content":"\n## 其实时间过得很快\n\n  想起这个博客创建时还是在暑假学车那时候，计划中的GO语言也没怎么学，到现在都2024年了，碌碌无为啊。\n\n  也发生了很多事，有悲有喜，有痛苦也有快乐，印象最深刻的是梦与现实的纠缠，这并不好，因为会打扰到别人。\n\n  记录一下“有意思”的时刻吧，出门被绊已是家常便饭，上次计算智能张伟伟老师让做小组PPT讲解论文，拉姆那一组是拉姆上去演讲，然后bingo，组长选的论文是会议论文而且发布时间有点早，不符合要求，重新做（QAQ）。\n\n  这个其实还好，上次跟着钟佬打亚太数模才是真的痛苦，什么都不会，最后一天熬了通宵在早上八点半交上去了作品，距离截至时间就剩下了半个小时，然后回去的时候全宿舍还都在睡觉，被迫在宿舍门口等待，又困又累又冷，后来还是km醒了，给拉姆开得门，上床睡觉醒来就是晚上六七点了。\n\n  预约纪念币也是如此，地图上明明是中原区，拉姆预约网点当时很着急，看见带有中原的，就选了，结果那边距离这里很远，坐车要一个半小时起步，高新区才是距离拉姆最近的网点（QAQ）\n\n  让拉姆想想，还有被别人第n次当成女生，走错实验室，走错教室，一觉醒来七点五十八（有早八）等\n  ![第n次被当成女生](https://www.qiuxs.cn/sharing-tools/img/read/17c5e537b12f0be6f4d335031f710891)\n  其实也有幸运的时刻，比如在提前考试的那一周，和王振宇在背复习资料的时候，看到了奇妙君在送GPT4激活码，然后然后拉姆就抽到了！虽然是个阉割版，但是这很德克斯特！！\n\n  上面是一个幸运时刻，但下面的让拉姆觉得更幸运，就是和曾经的故人聊天，很开心。\n\n  虽然拉姆可能会打扰到别人，但是如果拉姆能提供情绪价值，这是很幸运且值得的。拉姆喜欢这种感觉。如果没有提供情绪价值，拉姆真的很抱歉，此非本愿，愿君谅解。\n\n  **旧日未见乱心神，因梦记君扰故人**\n\n  眨眼间，距离高二的转折点过了四年，距离最开心的七年级过了八年，其实时间过得很快。\n\n## 每个人时刻都在改变着自己\n\n  每个人或许都在变得陌生，时间是可怕的东西，不过在时光的洗礼之后，所记得的，才更加珍贵。\n\n  拉姆不知道未来，就像曾经不知道现在，愧疚解不开执念，念念不忘不一定会有回响，每一次的疑问不一定都有回应。\n\n  猫猫是可爱的动物，拉姆很喜欢。\n\n  拉姆有个奇怪的能力，动物化，有时候会把别人看成某些小动物，很有意思。\n\n  不过拉姆很少能把别人看成猫猫，如果拉姆把你看成猫猫了，那么可能，拉姆想要养你，毕竟猫猫那么可爱（bushi）\n\n  提前考试那一周，很痛苦，可以和上上学期备战四级的时候不小心闪到腰有的一拼，那时候躺了两三天，腰才好一点，谁家系个鞋带能闪到腰！\n\n  不气不气，明天还要去吹寒风排队，敲，倒霉...\n\n  不过今天还有个单项，起码( )还是赔钱了...\n\n  果然，拉姆是拉姆，不是德克斯特，也不是乔治戴诺<(＿　＿)>\n\n## 期待\n\n  每个人都会有期待吧，希望24年可以，不那么倒霉，hhhh说笑了，倒霉已经习惯了，争取以后当乔治戴诺O(∩_∩)O ","tags":["日记"],"categories":["dairy"]},{"title":"GPT-4(8k)免费使用方法","url":"/2023/12/22/Tool/GPT4.0/","content":"\n## 进入Coze\n\n  我们需要进入官网，点击[Coze官网接口](https://www.coze.com/)，进入注册页面。\n\n  ![Coze1.jpg](https://static.st.qiuxs.cn/image-bed/0/2023/12/22/03_01_09_da0c3f98bcded3d281867daf3adcbb15.jpg)\n  \n  这个时候有两种注册方法，一个是Google账号，还有一个是手机号，这个随便选择一个都可以的。\n\n  ![Coze2.jpg](https://static.st.qiuxs.cn/image-bed/0/2023/12/22/03_01_13_6a65a773ff9dc481ce00451580757148.jpg)\n\n  进入之后的页面如下图所示：\n\n  ![Coze3.jpg](https://static.st.qiuxs.cn/image-bed/0/2023/12/22/03_01_17_1bd6c31ed3ff7cccfae1c6dc2fb44a84.jpg)\n\n  点击Bots，进入之后Create Bots\n\n  ![Coze4.jpg](https://static.st.qiuxs.cn/image-bed/0/2023/12/22/03_01_21_9210b88bd19981b07521b1e2130b45a3.jpg)\n\n  这里面可以选择GPT-4(8k)和GPT-3.5(16k)，以及调节设置，这个时候就可以使用GPT4.0了，不过如果习惯使用openAI官网的chatGPT，那么可能这个界面的操作不会那么舒服。\n\n  ![Coze5.jpg](https://static.st.qiuxs.cn/image-bed/0/2023/12/22/03_01_25_fa82f3ba0ee592d6a1266c0800808527.jpg)\n\n  以上就是GPT-4的免费使用过程了，需要注意的是，应该是需要科学上网的，其他方面应该不会有问题，那么祝各位体验愉快。\n","tags":["GPT"],"categories":["Tool"]},{"title":"拾词-Two（补）","url":"/2023/08/30/Poem/two1/","content":"## 缘一\n\n  这是 [拉姆的小树屋](https://sherry14love.github.io/)的真正的第二篇诗词集哦 o(*￣▽￣*)o\n\n  纯诗词集，所以，没有什么可看性，是属于拉姆自己的诗词书屋————\n\n## 牡丹洛诗 雅客馨词\n\n1-5\n``` bash\n  记忆可以让瞬间化为永恒，\n  但遗忘能够保持心理健康。\n  2023.08.08\n```\n```bash\n   拾一枚铜钱笑春风，捡一片落叶知秋冬，\n   这一束花开予君梦，算一些美好在心中。\n   2023.08.03\n```\n```bash\n  仙姿佚貌人间留，一双瞳水剪清秋。\n  2023.07.22\n```\n```bash\n  你无意轻惹我的踟蹰，清秀却似眉眼如初，\n  辗转反侧是梦的归途，怎算不上相思入骨。\n  （这几句词有味道，小说的味道.23.05.29\n```\n```bash\n  秋日私语旧呢喃，树影星光夜相谈，\n  弱水三千时光慢，再梦当时素装颜。\n  2021.09.15\n```\n6-10\n```bash\n  此梦夕阳已下，不复春时醉花，\n  那时那人那夏，却是入了无涯。\n  2021.09.24\n```\n```bash\n           生日快乐\n  幽兰芳影任时流，玲珑淡颜自娇羞，\n  今夜无眠几杯酒，醉中愿君梦辞忧。\n```\n```bash\n  抚风揉记忆君笑.2021.10.01\n```\n```bash\n  此夜无忧花尽开，与君安祺此心安。\n   2021.10.22\n```\n```bash\n  花语君馨心心念.2021.11.24\n```\n11-15\n```bash\n  了无痕迹了无心，忘了昨日是非今。\n  2021.11.29\n```\n```bash\n  突然发觉学校里的夜晚并不美，\n  沉寂遮掩了星星，我也路过了清冷\n  2021.12.08\n```\n```bash\n  缘起缘灭，花开花落，\n  是非执着，皆是因果，\n  也无对错，虽是落寞，\n  如初持若，此世不说，\n  不煞今我，也煞昨我，\n  梦魂思魄，醉去淡漠，\n  非是罪过，也是错过。\n  阿弥陀佛，阿弥陀佛。\n  2021.12.16\n```\n```bash\n  碎成星空之零落，本就飘零不执着，\n  多情应笑我.2021.12.17\n```\n```bash \n  昨夜恋花花未开，今日恋花花却败，\n  如缘似水了无痕，花开无声将梦枕。\n  2021.12.19\n```\n16-20\n```bash\n  日落红颜醉，如梦伊人媚21.12.23\n```\n```bash  \n  那时入夜浅睡无梦寻，笑忘众生劫难\n  皆是因果痴贪叹我一时忘了悲欢\n  左了情感落寞心间乃我现在模样\n  三生灾厄不祥今生今世孕。\n  2022.01.21\n```\n```bash  \n  穿叶寻蝶惊鸿过，闻君语馨心中灼。\n  2022.05.27\n```\n```bash  \n  已是红尘是非心，欲忘浮生也忘今。\n  2022.05.25\n```\n```bash \n  落日余晖惜故人，抚风留馨扰心神。\n  2022.07.09\n```\n21-25\n```bash\n  百花酿成蜜，其中辛苦谁在意。\n  2022.07.21\n```\n```bash\n  尘世茫茫，这人间太过烦恼\n  听一首陈词滥调的各种评说\n  是非对错的纷纷扰扰不若\n  不再关心回归本心，远离纷扰\n  叽叽喳喳的麻雀抓枝而立\n  却浑然不觉得枝蔓的业火\n  扯扯拽拽这言论太过苍白\n  又看霍雀观凤鸟，最后笑了笑\n  瓦雀弄枝头，不知衔蝉在身后\n  哗众欲取宠，怎料回首是小丑\n  一曲是非忧，悠悠轻抚眉间愁\n  三尺一蜉蝣，只管自身醉与休\n  2022.07.23\n```\n```bash\n  无风落日灿烂，有蝉鸣叶眷念，\n  漫步踱行此曳，星星点点人间。\n  2022.08.12\n```\n```bash \n  寻常之时秋风落叶意如诗，\n  再见而思泯醉入梦我不知\n  2022.10.09\n```\n```bash\n  晚风拂去霞光，扫落惆怅，倾洒的暮色苍茫，\n  落木的枝叶忧伤，朦胧的月色，像是夕阳留\n  给尘世的浅浅吻痕，引人遐想，沉郁的夜空，\n  淡淡地印在这一颗暗红色的心上，这一切如若\n  初遇的侣人梦中相见，辗转思念，夏日揉碎的\n  余热消散在秋日推来的云雨中，或许，这就是\n  现在我的诗句。2022.10.09\n```\n26-30\n```bash \n  浮生梦，梦浮生，花开蝶念各无声\n  一袭醉，醉一袭，清风拂尘睡意归\n  2022.11.07\n```\n```bash\n  渐入佳境得一梦，未料转身错三生\n  2022.11.25\n```\n```bash  \n  忽言秋风已落叶，不知今已仲冬天\n  2022.11.26\n```\n```bash  \n  遇君子翩翩，颂书籍朗朗，伴微风轻轻，\n  邂细雨绵绵，见路边狸花\n  2022.11.27\n```\n```bash \n  佳人亭亭而玉立，檀郎见之梦思之，\n  虽诉轻语不饶时，倩影却是，入了少年夜\n  中喃喃语，颠了晦明将醉拾，辗转意难思\n  ᖗ乛◡乛ᖘ2022.12.19\n```\n31-34\n```bash \n  悲伤的痕迹，搁浅在回忆里。2022.12.28\n```\n```bash  \n  轻云闭月醉星尘，流风回雪初旧痕。\n  2023.01.12\n```\n```bash \n  群星伴明月，篝火暖风醉此阙。\n  2023.01.29\n```\n```bash  \n  夜风柔语诉今夜入梦时道君安。\n  2023.02.24\n```\n\n <!--  诗词本是小道尔，无堪大雅之物，犹如话本，多是夸张渲染，而此值中元七月半，地官出世定人间善恶，以脱困囚，普渡世人，压亡灵戾气，消弭心中烦闷，且河灯度善，万物皆欢。\n\n  东扯西扯，其实记录一下，或许偶尔看看，曾经的，也谈不上文采的，只是按词押韵的堆积，肤浅的青春，也不错。\n\n  拉姆在想，想过好多，在夜晚入梦前很认真的想，或许，应该找些事情干了，学学Java，做做项目，以后或许有机会可能去干程序员吧，其实也突然觉得机器这类专业可以直接进厂挺好的，起码投职压力没那么大。\n\n  而程序员，害，可能三十出头丢了工作，之后在大街上摆摊，维持生活，当然，也只是一番设想，可能活不到那个时候，如果能活到老的话，我一定要尝试写写一本故事，这一定很完美，属于拉姆自己的人生。\n\n  其他的，如诗词的璀璨与浪漫，世间的美好遇繁华，大都与我无关，看看书，听听歌，养只小猫，或者就是一个美好的奢求了。\n\n  幼时不知事，常羡古时礼，不识古人战乱事， 几人温饱佐以礼。\n\n  应当满足的，十年之后也不知这篇博客还会存在吗，如果存在且看到的话，去去母校，见见朋友，天南海北，看看曾经的老大，显豪同学，或许他应该生了一个可爱的女儿了，帅气的朋友生的女儿肯定可爱（bushi）\n\n  为什么会提到老大呢，因为他现在在埋怨我打扰他上课了（虽然我告诉他成事不足者善为自己开脱，而且我和他聊天一分钟都没到，竟然埋怨我（没有天理了）\n\n  不成不成，整体文笔充满暮气可不成，就这样，**记过往，留往昔尝。** -->\n\n\n## 短词绪，意长居\n\n  >礼颜画笑，以待君芳\n\n  >礼颜画笑，以待馨芳\n\n  **这两个曾经很长一段时间作为拉姆的个人签名，一者君，一者馨，都很有意思，不得优劣。**\n\n  **牡丹洛诗 雅客馨词**这篇博客的起头序也很有意思的哦\n  <!-- 哈哈哈哈，或许未来的我都想不到里面的内涵。 -->\n\n```bash\n  一介书生，随缘入梦\n  梦抚清风，风过无声\n```\n```bash\n  裘马去留，俗生欢休\n  一枕黄粱，美梦如酒\n```\n  \n  这是最后两首，个人感觉写得还不错，记录一下，拾词篇应该告一段落了，下一步计划，开始！","tags":["拾词"],"categories":["诗词"]},{"title":"无限流量","url":"/2023/08/13/Tool/WARP1/","content":"\n## WARP+\n\n  首先去[WARP官网](https://1.1.1.1/) 下载软件\n\n  其次去[电报机器人](https://t.me/generatewarpplusbot )领取23PB的流量密钥（注：1PB=1000TB=1000 000GB流量）由此可以实现近乎无限流量的魔法，而且速度可以，畅看YouTube是没有任何压力的。\n\n  进入电报之后首先输入/start，再输入/generate，这个时候需要点进去并且关注这两个频道。\n  ![warpbot.jpg](https://www.qiuxs.cn/sharing-tools/img/174/read)\n  \n  然后再输入/generate，这个时候会弹出来简单的数字相加减，输入/generate 9（如图所示）\n  ![warpkey.jpg](https://www.qiuxs.cn/sharing-tools/img/175/read)\n\n  最后在软件的**偏好设置**里，点击**账户**，里面有个**使用其他密钥**，更换密钥就行了。\n  ![warps.jpg](https://www.qiuxs.cn/sharing-tools/img/176/read)\n\n## 没有电报怎么办\n\n  可以点击[这个](https://replit.com/@kelekekou8/WarpKey)，然后直接运行也可以生成一个密钥，从而进行使用。\n\n\n> 注意这里面的WARP虽然有两千多万GB流量，但是这个流量不能支持**Open AI**、**new bing**、**Netflix**、**tiktok**、**Disney**，但对于**YouTube**、**Facebook**、**Twitter**、**Discord**、**Tumblr**、**Mastodon**等网页是支持访问且无限制的，不过需注意这里的访问和你在国内一样，如果你平常不用**VPN**进行上网保护个人隐私的话（会暴露个人ip）。\n\n## 解锁ChatGPT和Netflix\n\n  这里会有朋友问怎么可以去Open AI、Netflix、tiktok、Disney这几个网站，这个的话，倒也是有几个方法，但是Sherry太垃圾了，这几天还在练车，没怎么有时间搞。\n  不过你去YouTube里搜索一下，一大堆利用WARP的解锁篇，解锁ChatGPT和Netflix的（多半是用VPS解锁，嗯~ o(*￣▽￣*)o）","tags":["魔法"],"categories":["Tool"]},{"title":"拾词-Two","url":"/2023/08/11/Poem/two/","content":"## 缘一\n\n  这是 [拉姆的小树屋](https://sherry14love.github.io/)的第二篇诗词文章 o(*￣▽￣*)o\n\n## 正文\n\n  咳咳咳，暂无内容，拉姆懒得写（虽说前几天就想写了）\n\n  懒癌犯了（捂脸）\n\n  鸽掉先（bushi）\n\n  PS:后面一定补上！（私密马赛~）\n\n\n","tags":["拾词"],"categories":["诗词"]},{"title":"Google和GPT","url":"/2023/07/19/Tool/Google/","content":"\n## Google账号的免费创立\n\n  我这里以安卓手机为例：\n\n  1. 首先下载一个OurPlay加速器，这个可以在应用商店搜到，然后进入授权进行下载虚拟运行环境（这个会自动下载）\n  ![google1.jpg](https://www.qiuxs.cn/sharing-tools/img/168/read)\n  2. 然后点击选择线路加速，这里选择**中国台湾**。\n  ![google2.jpg](https://www.qiuxs.cn/sharing-tools/img/169/read)\n  3. 其次点击登录账号，点击＋号登录游戏账号。\n  ![google3.jpg](https://www.qiuxs.cn/sharing-tools/img/170/read)\n  4. 这个时候左下角并没有创建账号，这个时候输入自己的电话号，点击下一步，系统会反馈没有你的Google账号，再**返回**上一步；或者点击忘记电子邮箱，进入下一步，再**返回**上一步。\n  ![google4.jpg](https://www.qiuxs.cn/sharing-tools/img/171/read)\n  5. 这个时候左下角就有**创建账号**，点击创建账号，为我自己创建，然后输入自己的姓氏和名字出生日期等，跟着创建流程就行，这样可以解决因为中国手机号不能注册的难题了，但是一定要记住你自己设置的密码，千万不要忘记。\n  ![google5.jpg](https://www.qiuxs.cn/sharing-tools/img/172/read)\n  ![google6.jpg](https://www.qiuxs.cn/sharing-tools/img/173/read)\n  6. 安卓用户别把账号绑定手机，不然忘记密码一类的会很麻烦，因为那个Google的验证码通知栏不会在安卓手机上显示（因为需要google play服务，而安卓手机自带的没有这个功能）\n\n  7. 在管理Google账号里设置如绑定手机号、绑定邮箱一类的，这样账号就真正的属于你了！\n\n  > 请注意，创建账号完成之后，请在手机或者电脑里的邮箱软件，比如qq邮箱里添加自己的Google邮箱账号，这时候一般第一次输入你的密码那边会显示密码错误，应该多试两次，基本上就可以了，最后才可以删除这个OurPlay加速器，预防自己创立Google之后却把号给弄丢了。\n\n  > 但如果密码是记错了，就用手机号发验证码找回，记住，那个Google绑定别绑定手机，尤其是安卓手机，不然又会出现一点麻烦的事情，因为那样找回的时候需要点手机不在身边，然后才会有手机号验证码找回。\n\n<!-- ## VPN\n  \n  **声明：满足好奇心可以，但不能进行任何违法行为，任何行为与本小破博客无关**。\n\n  VPN一般都是付费的，当然也有免费的，不过好多免费的不好用。\n\n  首先，先推荐一下[低价机场](https://dawn-tango-a1e.notion.site/5f7c5d2f7a7747a6bc6541406cb022f5),这里面有好多可以的，可以根据说明筛选。\n\n### 免费VPN\n\n  免费的也是有一些，当然注册账号的时候好多时候都需要你自备魔法，不然不能注册，这里面选择还是有章法的，比如某些免费VPN会盗取你的个人信息，可以去[vpnoverview](https://vpnoverview.com/best-vpn/free-vpn)找找，下面给出两个免费VPN：\n\n  > 1. 首先需要可以下载[GreenHub](https://greenhubtx.ga)，这个只是应急用的，而且自从GPT大火之后，好多时候这里面的免费服务器都是爆满状态（这个可以在国内注册）\n\n  > 2. 这时候有了GreenHub就可以注册其他免费的VPN了，比如Privadio（[注册免费计划的页面](https://signup.privadovpn.com/fre)）这个是一个月10G，用完需要去官网刷新，可以用qq邮箱注册，如果给你邮箱频繁发消息，你可以点击邮件里最下面的Unsubscribe（也就是退订选项）\n\n  3. 如果是深度魔法用户，我还是推荐用一些付费的，如果只是偶尔用用GPT，可以使用免费的应付了事。\n\n  4. 如果操作不是很明白，可以和博主在qq/wx说明，或许会有小惊喜哦~\n\n### 付费VPN\n\n  [低价机场](https://dawn-tango-a1e.notion.site/5f7c5d2f7a7747a6bc6541406cb022f5)感觉完全可以了。\n -->\n\n## GPT\n\n  这东西很好用，如果你是写实验报告一类的，简直不要太轻松，但是因为未知因素，正常用户只能用一些镜像GPT，一些镜像GPT还是很好用的，甚至一些GPT3.5比正版的3.5好用（因为用户个人的训练）\n\n### 镜像GPT：\n  \n  > One：BAI GPT：https://chatbot.theb.ai/#/chat/1002\n  > Two：AI之眼：https://ai-eye.org\n  > Three：ohmy GPT：https://www.ohmygpt.com/chat\n  > Four：poe：https://poe.com \n  > Five：https://beta.chatmindai.net\n  > six：http://124.220.104.235:31105/web/chatgpt\n\n  这六个都还以当镜像，其中第三个是咱学校的学长搞的，里面的免费代币每天有一万，如果是使用3.5的话，一天可以使用一万次；\n\n  第四个poe，里面内置了好多市面上可用GPT，还可以体验4.0，但是美中不足的是，前四个都需要挂VPN。\n\n  第五个是国内的一个镜像软件网页版，3.5的话一个小时可以用25次，claude+每天可以用30次，4.0和Claude+100k一日一次。\n\n  第六个是免费的一个gpt聚合，有16个镜像，好多可以在国内登录。\n\n  如果你是使用edge浏览器的话，在[获取扩展](https://microsoftedge.microsoft.com/addons/Microsoft-Edge-Extensions-Home) 里搜索Sider，然后找到 Sider: ChatGPT侧边栏 这个小插件，点击添加就行，一天可以用30次（用Google账号登录之后），而且不需要挂梯子。\n  \n  上面这些差不多有七个平替，还有GPT网页聚合，应该够用了。\n\n### 正版chatGPT：\n\n  如果是注册ChatGPT，这个的话比较麻烦，我可以推荐两个方法得到一个chatGPT账号，但不能完全确保。\n  \n  <!-- 方法一：方法比较复杂 -->\n  方法一：现如今注册挺简单的，和今年年初，以及今年七八月相比\n\n  > 1. 首先去[SMS官网](https://sms-activate.org/cn)注册账号，并且用支付宝最少充值2$（约和14.3人民币，150卢布）购买虚拟手机号接收验证码。\n\n  <!-- > 2. 然后用VPN去[openAI注册](chat.openai.com/auth/lo)，跟着流程来，最麻烦的是接收验证码，因为手机号被标记，甚至IP，账号被系统标记，导致接收不了验证码，很是麻烦，所以我推荐第二个方法。 -->\n\n  > 2. 然后用VPN去[openAI注册](chat.openai.com/auth/lo)，跟着流程来，最麻烦的是接收验证码，但是可能因为手机号、甚至IP、邮箱账号被系统标记，导致接收不了验证码，不过现在应该好多了，没那么严格了。\n\n  **博主推荐使用Google邮箱或者outlook邮箱进行注册，选一个好一点干净一点的ip，基本上问题不大**\n\n  相对于方法一，方法二很简单，那就是买成品号，但是一个账号动不动就买几十的，太不值了，但我知道一个很便宜的，使用住宅ip注册的。\n\n  方法二：购买\n\n  不过现在博主的渠道的已经失效了，所以就不告知了，可惜了，那个渠道挺便宜的，3元一个成品号。--2023/11/14\n\n  <!-- 点击[这里](https://fk.gpt0.icu/)购买，不贵，3元一个，比自己注册便宜很多，最后查询订单查看卡密就行。\n\n  > 这里说明一下，用这个方法注册的账号可以使用chatGPT，相对于第一种方法，这种方法所购买的直接是成品号，邮箱是对方的虚拟邮箱，而不是自己的邮箱。如果服务器到期了，这个邮箱就没了，但是，号还是会存在的，也就是说你的chatGPT账号还是能正常使用。 -->\n\n  **这两种方法，请自行判断（其实没必要用正版chatGPT，好多镜像都是很好用的，这个就看自己的选择了)**\n\n### new bing\n\n  [new bing](www.bing.com/new)的联网功能还是可以的，在某些方面比chatGPT好用，仁者见仁智者见智，我的话，都用 嗯哼~ o(*￣▽￣*)o\n\n  首先需要挂着梯子，点击[new bing](www.bing.com/new)，直接开始聊天就行\n\n  >如果使用GreenHub翻墙的话，需要点击设置，在智能模式代理设置中输入 www.bing.com 这样的话，去new bing就不会转跳，可以正常使用new bing\n\n### claude2.0\n\n  这个是**免费**开放的，可以**上传文件**，让AI帮你分析并回答你的问题，是**对标GPT4.0**存在的，其中分析你上传的文件，文件最多可以上传**5个**，每个最大**10mb**，而且支持用户在每个问答中输入**100K**的tokens。\n\n  注册方法：\n\n  1. 首先需要挂VPN，这个对VPN有要求，需要**美国**或者**英国**的节点。\n\n  2. 点击[claude](https://claude.ai/login)进行注册。\n\n### GPT-4\n\n  GPT4嘛，有一些免费的，但请注意，这种免费的一般来讲比正版要弱一些，比如上面说的，**poe、Claude2.0、new bing**，除此外还有两个方法：\n\n  1. [steamship.com](https://www.steamship.com)\n\n  > 用Google登录之后一直下一步就行，然后点击[这里](https://www.steamship.com/plugins/gpt-4/_create)\n\n  > 直接进入创建GPT-4实例的页面，这里可以点击Optional Configuration进行自定义配置或者直接默认配置，最后点击create按钮创建\n\n  2. [chat.forefront.ai](https://chat.forefront.ai)\n\n  > GPT-4：每三个小时五次\n  > Claude+：每三个小时五次\n  > Claude：不限制使用\n  > GPT-3.5：不限制使用\n\n说了这么多东西，突然想起来一个安卓软件，之前安利过，奇妙应用，很不错的一个应用库 https://magicalapp.lanzoul.com/iGrjf12m6agd\n\n对了，请注意，点击红色字体可以直接跳转，所以许多我没有直接放网址链接，那么，晚安啦~\n\n\n","tags":["魔法"],"categories":["Tool"]},{"title":"拾词-One","url":"/2023/07/14/Poem/one/","content":"## 缘启\n\n这是 [拉姆的小树屋](https://sherry14love.github.io/)的第一篇文章-缘起~ o(*￣▽￣*)o\n\n<!-- 仅仅是想到什么写什么，如有观感不佳，十分抱歉（小声）（bushi） -->\n\n## 桃花坞\n\n> 城市里的车水马龙，街道上的过往行人，不过是穿越时空的匆匆过客，无论多少次回眸，都只是一张张陌生的人脸，没有眷念与感情，最终化为梦的虚无，什么也没有。\n\n  前几天跑图书馆去看哲学书，结果脑袋要炸掉了，就随手拿了一本悬疑小说，里面的一句，感觉还不错。\n\n  过来人的劝诫，没事别看解构主义史...\n  <!-- 前几天跑图书馆看哲学书看懵了，便随手拿了一本书，借着书中意象，得了这一句，些许趣味，倒是有点像文青。 -->\n\n### 往日之词\n\n1-5\n``` bash  \n  轻云闭月醉星尘，流风回雪除旧痕。\n  2023.1.12\n```\n``` bash \n  碎步踏月梦留香，倾城一笑是姑娘。\n  2023.5.11\n```\n``` bash \n  细语低吟且为君，一阕轻言莫敢云。\n  2023.5.11\n```\n``` bash\n  夜语思梦至浮生，灯落三更入赤诚。\n  2023.6.24\n```\n``` bash\n  古人道，檀口微开皓齿香，眼波浮动脸生光，\n  怎料想，春风不见桃花落，频频入梦不可说，\n  半依墙，不语寻常也寻常。2023.5.22\n```\n6-9\n``` bash\n  轻言语，眉间几多柔许，了了，闲情我寄此句，\n  书瞳中颜色温如玉，音如宫商羽。2023.3.2\n```\n``` bash\n  抚风柳，白雪糅肤醉酒，些许，羞涩不善言语，\n  道尘露芳草落于秋，恬然心中留。2023.3.2\n```\n``` bash\n  晃晃如梦间，见朱颜倩影肌肤白，醉人眼，\n  玉容含笑柔情浅，桃花开，春风暖，眉梢\n  卧蚕似婉转，幸甚哉，识君面，淡妆由衷\n  之言妍。2023.3.25\n```\n``` bash\n  欲写妙笔几回言，姑娘素衣御翩跹，梦涟。\n  想是弱柳扶风施夷在，胜似相识缘由浅，\n  一时喃。几若妍，不分千百姿态，\n  醉了媚了几杯还（huai）。\n  痴笑却嫌，嗔我三分言语笨，\n  不知怎扣心门。启皓齿，朱唇玉面。\n  叫谁心中空空心中恐，缘法弄，花依旧，\n  蝶与柔风清香留。何来腼腆，书一笑莞尔\n  嫣然，如梦佳人重现，算今生，也结缘。\n  2023.5.4\n```\n\n  这些算得上是23年写的比较有感觉的几句,貌似不正经的诗有点多。\n  \n  咳，问题不大，毕竟诗词总不能是如此不便之物吧😏\n\n  <!-- 咳，不要在意，问题不大，仅仅是留作纪念的,里面好像还有写给别人的（bushi） -->\n\n## 花开盛夏绪-博客部署历程\n\n  昨天下雨，闷热的，拉姆做博客家里WiFi还不稳定，所以拖到今天才做（下雨天真的很适合睡觉）\n\n  然后一上午部署成功（突然想到八个月前弄博客弄了三四天都没弄好，怎么能搞那么久呢，而且好像是卡在了部署GitHub仓库里，唔，不理解）\n\n  午饭之前部署完主题，然后就出bug了，本地部署好好的，部署到GitHub仓库里布局不知怎得就乱了（痛）弄了一会没弄好，吃完饭再来弄，弄了半个多小时，搞不完，问[kmar](https://kmar.top \"空梦的博客\")（宿舍大佬）\n\n  结果布局却突然好了，但是源文件拉姆一点点都没碰，对拉姆这种菜鸟来说，简直百思不得其解。\n  <!-- 结果布局就很突然得好了，就很懵，因为那些文件拉姆一点点都没碰（对这种菜鸟来说，简直百思不得其解） -->\n\n  而且这几天不知怎得，家里WiFi一直不稳定，今天就好多次网络是不稳定的，啊啊啊令人抓狂（恼）\n\n  拉姆到最后都怀疑自己是不是前几天拆电脑装固态的时候不小心碰到了电脑网卡（ ）\n\n  好在到最后结果是好的————\n\n<!-- ### 绪One\n\n  思青告诉我他又被两个小姑娘要微信了，我表示，最好快点生个女娃，思青那么帅，生下的娃娃肯定卡哇伊！（老父亲思想作祟）\n\n  昨天和别的朋友聊了聊，貌似好像同龄人都不喜欢结婚，很难不赞同，毕竟现实的社会环境（ ）\n\n  希望未来有个富二代朋友带带我，我不想努力了（信誓旦旦） -->\n\n## 绪One\n\n  再不结束都十一点了快，现在晚上十点半（手打博客中，明天再学）\n\n  说到学拉姆想起来拉姆还得考科一，但是这几天都没怎么看过题，唔，过两天还得参加青训营笔试，拉姆这么菜这么倒霉，说不定连笔试都过不了，算了，过不了就开始认真备考科一（bushi）\n\n  哦天哪，拉姆还忘记看GO语言了，啊啊啊这一天天的，太颓废了\n\n## 绪Two\n\n  嗯哼先这样，睡觉睡觉。\n \n  Darling, may you have a wonderful evening. \n\n  嗯~ o(*￣▽￣*)o\n","tags":["拾词"],"categories":["诗词"]}]